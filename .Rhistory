pivot_wider(id_cols = c("host","phage","group"), names_from="filter", values_from="no.ml")%>%
rename(free.phage=`TRUE`, total=`FALSE`)%>%
mutate(perc.free=percent(free.phage/total))%>%
ggplot(aes(x=group))+
geom_point(data = .%>%pivot_longer(c("total", "free.phage"),names_to="pop" , values_to="PFU.ml"), aes(y=PFU.ml, color=pop, shape=pop),size=2)+
geom_text(aes(label=perc.free, y=free.phage/4))+
scale_y_log10()+
facet_grid(phage~host)+
theme_cowplot()+
scale_shape_manual(values = c(21,24))+
panel_border()+
ylab("PFU/ml")+
ggtitle("PFU source of untreated samples (t=0)")
d.filt <- d%>%
mutate(phage=fct_relevel(phage,c("noPhage","Goe2", "SPO1")))%>%
mutate(host=fct_rev(host))%>%
filter(host=="wt"|host=="dsspAB")%>%
filter(group!="preliminary")%>%
filter(heat.min==0)%>%
filter(assay=="PFU")%>%
#there are 4 rows with data marked as "TMC" (=Too Many to Count)
# these are coerced into NA
mutate(counts=as.numeric(counts))%>%
mutate(no.ml = counts/(dilution*ml.plated))%>%
pivot_wider(id_cols = c("host","phage","group"), names_from="filter", values_from="no.ml")%>%
rename(free.phage=`TRUE`, total=`FALSE`)%>%
mutate(perc.free=100*free.phage/total)
sum.filt <- d.filt%>%
filter(!is.na(perc.free))%>%
group_by(phage,host)%>%
summarise(n=n(),m=mean(perc.free), s=sd(perc.free))
d.filt%>%
ggplot(aes(x=host,y= perc.free))+
geom_col(data=sum.filt,aes(y=m))+
geom_text(data=sum.filt,aes(label=percent(m/100)), y=10)+
geom_jitter(width = 0.1, height = 0, shape=21, size=3, fill="white")+
coord_cartesian(ylim=c(1e-5,100))+
facet_wrap(~phage)+
theme_cowplot()+
scale_shape_manual(values = c(21,24))+
panel_border()+
ylab("Free phage (%)")+
ggsave2(here("figures", "filter_phage.png"),width = 4,height = 4)
mut.non.syn <- data %>%
group_by(nut.lim, phage) %>%
summarise(mut.non.syn = sum(mut.non.syn))
rm(list = ls())
setwd("~/GitHub/stoichiogenomics")
require("dplyr")
#require("tidyr")
#require("janitor")
require("tibble")
require("data.table")
data <- read.csv("~/GitHub/stoichiogenomics/breseq/unified/count-diff.csv", header = TRUE)
nut.treat <- c("N", "N", "N", "N", "P", "P", "P", "P")
phage.treat <- c("minus", "plus", "plus", "plus", "minus", "plus", "plus", "plus")
data <- data.frame(nut.treat, phage.treat, data[,c(5, 15, 16)])
colnames(data) <- c("nut.lim", "phage", "s.indel", "mut.syn", "mut.non.syn")
mut.non.syn <- data %>%
group_by(nut.lim, phage) %>%
summarise(mut.non.syn = sum(mut.non.syn))
mut.non.syn
mut.non.syn.df <- as.data.frame(mut.non.syn)
mut.non.syn.df
mut.non.syn$mut.non.syn
x <- matrix(mut.non.syn$mut.non.syn, ncol = 2, byrow = F)
x
mut.non.syn
rownames(x) <- c("minus", "plus")
x
colnames(x) <- c("N","P")
x
mut.non.syn <- data %>%
group_by(nut.lim, phage) %>%
summarise(mut.non.syn = sum(mut.non.syn))
mut.non.syn
#mut.non.syn.df <- as.data.frame(mut.non.syn)
x <- matrix(mut.non.syn$mut.non.syn, ncol = 2, byrow = F)
colnames(x) <- c("N","P")
rownames(x) <- c("minus", "plus")
ma.type.tab <- as.table(ma.type.mat)
x.tab <- as.table(x)
x.tab
x.tab.margins <- addmargins(x.tab)
x.tab.margins
x.chi <- chisq.test(x.tab)
x.chi
x.tab.margins
mut.type <- data$mut.non.syn
mut.type
mut.non.syn <- data %>%
group_by(nut.lim, phage) %>%
summarise(mut.non.syn = sum(mut.type)) %>%
pivot_wider(names_from = nut.lim, values_from = mut.type)
mut.non.syn <- data %>%
group_by(nut.lim, phage) %>%
summarise(mut.type = sum(mut.type)) %>%
pivot_wider(names_from = nut.lim, values_from = mut.type)
mut.type <- data$mut.non.syn
mut.non.syn <- data %>%
group_by(nut.lim, phage) %>%
summarise(mut.type = sum(mut.type)) %>%
pivot_wider(names_from = nut.lim, values_from = mut.type)
mut.non.syn <- data %>%
group_by(nut.lim, phage) %>%
summarise(mut.type = sum(mut.type)) %>%
pivot_wider(names_from = nut.lim, values_from = mut.non.syn)
mut.non.syn <- data %>%
group_by(nut.lim, phage) %>%
summarise(mut.non.syn = sum(mut.type)) %>%
pivot_wider(names_from = nut.lim, values_from = mut.non.syn)
mut.non.syn <- data %>%
group_by(nut.lim, phage) %>%
summarise(mut.non.syn = sum(mut.non.syn)) %>%
pivot_wider(names_from = nut.lim, values_from = mut.non.syn)
mut.non.syn <- data %>%
group_by(nut.lim, phage) %>%
summarise(mut.non.syn = sum(mut.non.syn)) %>%
pivot_wider(names_from = nut.lim, values_from = mut.non.syn)
rm(list = ls())
setwd("~/GitHub/stoichiogenomics")
require("dplyr")
#require("tidyr")
#require("janitor")
require("tibble")
#require("data.table")
data <- read.csv("~/GitHub/stoichiogenomics/breseq/unified/count-diff.csv", header = TRUE)
nut.treat <- c("N", "N", "N", "N", "P", "P", "P", "P")
phage.treat <- c("minus", "plus", "plus", "plus", "minus", "plus", "plus", "plus")
data <- data.frame(nut.treat, phage.treat, data[,c(5, 15, 16)])
colnames(data) <- c("nut.lim", "phage", "s.indel", "mut.syn", "mut.non.syn")
mut.non.syn <- data %>%
group_by(nut.lim, phage) %>%
summarise(mut.non.syn = sum(mut.non.syn)) %>%
pivot_wider(names_from = nut.lim, values_from = mut.non.syn)
mut.non.syn <- data %>%
group_by(nut.lim, phage) %>%
summarise(mut.non.syn = sum(mut.non.syn))
#mut.non.syn.df <- as.data.frame(mut.non.syn)
x <- matrix(mut.non.syn$mut.non.syn, ncol = 2, byrow = F)
colnames(x) <- c("N","P")
rownames(x) <- c("minus", "plus")
x.tab <- as.table(x)
x.tab.margins <- addmargins(x.tab)
x.chi <- chisq.test(x.tab)
mut.type <- data$mut.non.syn
mut.type <- data$mut.non.syn
mut.non.syn <- data %>%
group_by(nut.lim, phage) %>%
summarise(mut.type = sum(mut.type))
mut.non.syn
mut.type
mut.non.syn <- data %>%
group_by(nut.lim, phage)
mut.non.syn
mut.non.syn <- data %>%
group_by(nut.lim, phage) %>%
summarise(x = sum(mut.type))
mut.non.syn
mut.non.syn <- data %>%
group_by(nut.lim, phage) %>%
summarise(mut.non.syn = sum(mut.type))
mut.non.syn
mut.non.syn <- data %>%
group_by(nut.lim, phage) %>%
summarise(mut.non.syn = sum(mut.non.syn))
mut.non.syn
mut.non.syn <- data %>%
group_by(nut.lim, phage) %>%
summarise(x = sum(mut.non.syn))
mut.non.syn
mut.type <- data$mut.non.syn
mut.non.syn <- data %>%
group_by(nut.lim, phage) %>%
summarise(mut = sum(mut.non.syn))
mut.non.syn
data
mut.non.syn <- data %>%
group_by(nut.lim, phage) %>%
summarise(mut.non.syn = sum(mut.non.syn))
mut.non.syn.mat <- matrix(mut.non.syn$mut.non.syn, ncol = 2, byrow = F)
colnames(mut.non.syn.mat) <- c("N","P")
rownames(mut.non.syn.mat) <- c("minus", "plus")
mut.non.syn.tab <- as.table(mut.non.syn.mat)
mut.non.syn.tab.margins <- addmargins(x.tab)
mut.non.syn.chi <- chisq.test(mut.non.syn.tab)
mut.non.syn.chi
# Posthoc analysis
mut.non.syn.z <- as.data.frame(mut.non.syn.chi$stdres)
mut.non.syn.chi.x2 <- mut.non.syn.chi.z$Freq^2
mut.non.syn.chi.x2 <- mut.non.syn.z$Freq^2
mut.non.syn.p <- pchisq(mut.non.syn.chi.x2, df = 1, lower.tail = FALSE)
# Posthoc analysis
mut.non.syn.z <- as.data.frame(mut.non.syn.chi$stdres)
mut.non.syn.x2 <- mut.non.syn.z$Freq^2
mut.non.syn.p <- pchisq(mut.non.syn.x2, df = 1, lower.tail = FALSE)
mut.non.syn.p.adj <- p.adjust(mut.non.syn.p, method = "BH")
# Posthoc analysis
mut.non.syn.z <- as.data.frame(mut.non.syn.chi$stdres)
mut.non.syn.x2 <- mut.non.syn.z$Freq^2
mut.non.syn.p <- pchisq(mut.non.syn.x2, df = 1, lower.tail = FALSE)
mut.non.syn.p.adj <- p.adjust(mut.non.syn.p, method = "BH")
mut.non.syn.post.hoc <- data.frame(mut.non.syn.z, mut.non.syn.x2 ,
mut.non.syn.p, mut.non.syn.p.adj)
mut.non.syn.post.hoc
colnames(mut.non.syn.post.hoc) <- c("phage", "nut.lim", "z", "chi2", "p", "p.adj")
mut.non.syn.post.hoc
data
data <- read.csv("~/GitHub/stoichiogenomics/breseq/unified/count-diff.csv", header = TRUE)
data
data <- read.csv("~/GitHub/stoichiogenomics/breseq/unified/count-diff.csv", header = TRUE)
data
data <- read.csv("~/GitHub/stoichiogenomics/breseq/unified/larsen.csv", header = TRUE)
data2 <- read.csv("~/GitHub/stoichiogenomics/breseq/unified/larsen.csv", header = TRUE)
rm(list = ls())
setwd("~/GitHub/stoichiogenomics")
require("dplyr")
#require("tidyr")
#require("janitor")
require("tibble")
rm(list = ls())
setwd("~/GitHub/stoichiogenomics")
require("dplyr")
require("tibble")
data <- read.csv("~/GitHub/stoichiogenomics/breseq/unified/count-diff.csv", header = TRUE)
nut.treat <- c("N", "N", "N", "N", "P", "P", "P", "P")
phage.treat <- c("minus", "plus", "plus", "plus", "minus", "plus", "plus", "plus")
data <- data.frame(nut.treat, phage.treat, data[,c(5, 15, 16)])
colnames(data) <- c("nut.lim", "phage", "s.indel", "mut.syn", "mut.non.syn")
mut.non.syn <- data %>%
group_by(nut.lim, phage) %>%
summarise(mut.non.syn = sum(mut.non.syn))
mut.non.syn.mat <- matrix(mut.non.syn$mut.non.syn, ncol = 2, byrow = F)
colnames(mut.non.syn.mat) <- c("N","P")
rownames(mut.non.syn.mat) <- c("minus", "plus")
mut.non.syn.tab <- as.table(mut.non.syn.mat)
mut.non.syn.tab.margins <- addmargins(x.tab)
mut.non.syn.chi <- chisq.test(mut.non.syn.tab)
mut.non.syn.tab.margins <- addmargins(mut.non.syn.tab)
mut.non.syn.chi <- chisq.test(mut.non.syn.tab)
mut.non.syn.z <- as.data.frame(mut.non.syn.chi$stdres)
mut.non.syn.x2 <- mut.non.syn.z$Freq^2
mut.non.syn.p <- pchisq(mut.non.syn.x2, df = 1, lower.tail = FALSE)
mut.non.syn.p.adj <- p.adjust(mut.non.syn.p, method = "BH")
mut.non.syn.post.hoc <- data.frame(mut.non.syn.z, mut.non.syn.x2 ,
mut.non.syn.p, mut.non.syn.p.adj)
colnames(mut.non.syn.post.hoc) <- c("phage", "nut.lim", "z", "chi2", "p", "p.adj")
data2 <- read.csv("~/GitHub/stoichiogenomics/breseq/unified/larsen.csv", header = TRUE)
data2 <- read.csv("~/GitHub/stoichiogenomics/breseq/unified/larsen.csv", header = TRUE)
data2 <- read.csv("~/GitHub/stoichiogenomics/breseq/unified/larsen.csv", header = TRUE)
data2 <- read.csv("~/GitHub/stoichiogenomics/breseq/unified/larsen.csv", header = TRUE)
data2 <- read.csv("~/GitHub/stoichiogenomics/breseq/unified/larsen.csv", header = TRUE)
data2 <- read.csv("~/GitHub/stoichiogenomics/breseq/unified/larsen.csv", header = TRUE)
data2 <- read.csv("~/GitHub/stoichiogenomics/breseq/unified/larsen.csv", header = TRUE)
data2 <- read.csv("~/GitHub/stoichiogenomics/breseq/unified/larsen.csv", sep = "", header = TRUE)
data2 <- read.table(readLines("~/GitHub/stoichiogenomics/breseq/unified/larsen.csv", warn = FALSE), header=TRUE, sep=”,”)
data2 <- read.table(readLines("~/GitHub/stoichiogenomics/breseq/unified/larsen.csv", warn = FALSE), header=TRUE, sep =””)
# data2 <- read.csv("~/GitHub/stoichiogenomics/breseq/unified/larsen.csv", sep = "", header = TRUE)
data2 <- read.table(readLines("~/GitHub/stoichiogenomics/breseq/unified/larsen.csv", warn = FALSE), sep =””, header=TRUE)
# data2 <- read.csv("~/GitHub/stoichiogenomics/breseq/unified/larsen.csv", sep = "", header = TRUE)
data2 <- read.table(readLines("~/GitHub/stoichiogenomics/breseq/unified/larsen.csv", warn = FALSE), sep ="", header=TRUE)
data2 <- read.table(readLines("~/GitHub/stoichiogenomics/breseq/unified/larsen.csv"), sep ="", header=TRUE)
data2 <- read.csv("~/GitHub/stoichiogenomics/breseq/unified/larsen.csv", sep = "", header = TRUE)
data2 <- read.table("~/GitHub/stoichiogenomics/breseq/unified/larsen.txt", sep="\t", header=TRUE)
data2 <- read.table("~/GitHub/stoichiogenomics/breseq/unified/larsen.txt", sep="\t", header=TRUE)
data2 <- read.csv("~/GitHub/stoichiogenomics/breseq/unified/larsen.csv", sep = "", header = TRUE)
data2
data2 <- read.csv("~/GitHub/stoichiogenomics/breseq/unified/larsen.csv", sep = ",", header = TRUE)
nut.treat <- c("N", "N", "N", "N", "P", "P", "P", "P")
phage.treat <- c("minus", "plus", "plus", "plus", "minus", "plus", "plus", "plus")
data2
colnames(data2) <- c("nut.lim", "phage", "num.iso", "total.muts", "total.unique", "mut.syn", "mut.non.syn")
data2
mut.non.syn <- data2 %>%
group_by(nut.lim, phage) %>%
summarise(mut.non.syn = sum(mut.non.syn))
mut.non.syn.mat
mut.non.syn <- data2 %>%
group_by(nut.lim, phage) %>%
summarise(mut.non.syn = sum(mut.non.syn))
mut.non.syn
data2
mut.non.syn.mat <- matrix(mut.non.syn$mut.non.syn, ncol = 2, byrow = F)
mut.non.syn.mat
colnames(mut.non.syn.mat) <- c("N","P")
rownames(mut.non.syn.mat) <- c("minus", "plus")
mut.non.syn.mat
mut.non.syn.tab <- as.table(mut.non.syn.mat)
mut.non.syn.tab
mut.non.syn.tab.margins <- addmargins(mut.non.syn.tab)
mut.non.syn.tab.margins
mut.non.syn.chi
rm(list = ls())
setwd("~/GitHub/stoichiogenomics")
require("dplyr")
require("tibble")
data2 <- read.csv("~/GitHub/stoichiogenomics/breseq/unified/larsen.csv", sep = ",", header = TRUE)
colnames(data2) <- c("nut.lim", "phage", "num.iso", "total.muts", "total.unique", "mut.syn", "mut.non.syn")
mut.non.syn <- data2 %>%
group_by(nut.lim, phage) %>%
summarise(mut.non.syn = sum(mut.non.syn))
mut.non.syn.mat <- matrix(mut.non.syn$mut.non.syn, ncol = 2, byrow = F)
colnames(mut.non.syn.mat) <- c("N","P")
rownames(mut.non.syn.mat) <- c("minus", "plus")
mut.non.syn.tab <- as.table(mut.non.syn.mat)
mut.non.syn.tab.margins <- addmargins(mut.non.syn.tab)
mut.non.syn.chi <- chisq.test(mut.non.syn.tab)
mut.non.syn.chi
mut.non.syn.fish <- fish.test(mut.non.syn.tab)
mut.non.syn.fish <- fisher.test(mut.non.syn.tab)
mut.non.syn.fish
mut.non.syn.chi
# Posthoc analysis
mut.non.syn.z <- as.data.frame(mut.non.syn.chi$stdres)
mut.non.syn.x2 <- mut.non.syn.z$Freq^2
mut.non.syn.p <- pchisq(mut.non.syn.x2, df = 1, lower.tail = FALSE)
mut.non.syn.p.adj <- p.adjust(mut.non.syn.p, method = "BH")
mut.non.syn.post.hoc <- data.frame(mut.non.syn.z, mut.non.syn.x2 ,
mut.non.syn.p, mut.non.syn.p.adj)
colnames(mut.non.syn.post.hoc) <- c("phage", "nut.lim", "z", "chi2", "p", "p.adj")
mut.non.syn.post.hoc
rm(list = ls())
setwd("~/GitHub/stoichiogenomics")
require("dplyr")
require("tibble")
data <- read.csv("~/GitHub/stoichiogenomics/breseq/unified/count-diff.csv", header = TRUE)
nut.treat <- c("N", "N", "N", "N", "P", "P", "P", "P")
phage.treat <- c("minus", "plus", "plus", "plus", "minus", "plus", "plus", "plus")
data <- data.frame(nut.treat, phage.treat, data[,c(5, 15, 16)])
colnames(data) <- c("nut.lim", "phage", "s.indel", "mut.syn", "mut.non.syn")
mut.non.syn <- data %>%
group_by(nut.lim, phage) %>%
summarise(mut.non.syn = sum(mut.non.syn))
mut.non.syn.mat <- matrix(mut.non.syn$mut.non.syn, ncol = 2, byrow = F)
colnames(mut.non.syn.mat) <- c("N","P")
rownames(mut.non.syn.mat) <- c("minus", "plus")
mut.non.syn.tab <- as.table(mut.non.syn.mat)
mut.non.syn.tab.margins <- addmargins(mut.non.syn.tab)
mut.non.syn.chi <- chisq.test(mut.non.syn.tab)
mut.non.syn.z <- as.data.frame(mut.non.syn.chi$stdres)
mut.non.syn.x2 <- mut.non.syn.z$Freq^2
mut.non.syn.p <- pchisq(mut.non.syn.x2, df = 1, lower.tail = FALSE)
mut.non.syn.p.adj <- p.adjust(mut.non.syn.p, method = "BH")
mut.non.syn.post.hoc <- data.frame(mut.non.syn.z, mut.non.syn.x2 ,
mut.non.syn.p, mut.non.syn.p.adj)
colnames(mut.non.syn.post.hoc) <- c("phage", "nut.lim", "z", "chi2", "p", "p.adj")
mut.non.syn.post.hoc
mut.non.syn <- data2 %>%
group_by(nut.lim, phage) %>%
summarise(total.unique = sum(total.unique))
mut.non.syn.mat <- matrix(mut.non.syn$total.unique, ncol = 2, byrow = F)
data2
data2 <- read.csv("~/GitHub/stoichiogenomics/breseq/unified/larsen.csv", sep = ",", header = TRUE)
colnames(data2) <- c("nut.lim", "phage", "num.iso", "total.muts", "total.unique", "mut.syn", "mut.non.syn")
mut.non.syn <- data2 %>%
group_by(nut.lim, phage) %>%
summarise(total.unique = sum(total.unique))
mut.non.syn.mat <- matrix(mut.non.syn$total.unique, ncol = 2, byrow = F)
colnames(mut.non.syn.mat) <- c("N","P")
rownames(mut.non.syn.mat) <- c("minus", "plus")
mut.non.syn.tab <- as.table(mut.non.syn.mat)
mut.non.syn.tab.margins <- addmargins(mut.non.syn.tab)
mut.non.syn.chi <- chisq.test(mut.non.syn.tab)
mut.non.syn.chi
# p-value = 0.0894 # non-synonymous
# p-value = 0.006043 # total unique
mut.non.syn.fish <- fisher.test(mut.non.syn.tab)
mut.non.syn.fish
mut.non.syn <- data2 %>%
group_by(nut.lim, phage) %>%
summarise(mut.non.syn = sum(mut.non.syn))
mut.non.syn <- data2 %>%
group_by(nut.lim, phage) %>%
summarise(mut.non.syn = sum(mut.non.syn))
mut.non.syn <- data2 %>%
group_by(nut.lim, phage) %>%
summarise(mut.non.syn = sum(mut.non.syn))
rm(list = ls())
setwd("~/GitHub/stoichiogenomics")
require("dplyr")
require("tibble")
data <- read.csv("~/GitHub/stoichiogenomics/breseq/unified/count-diff.csv", header = TRUE)
data
# Clear and set working directory
rm(list = ls())
setwd("~/GitHub/stoichiogenomics")
require("dplyr")
require("tibble")
data2 <- read.csv("~/GitHub/stoichiogenomics/breseq/unified/larsen.csv", sep = ",", header = TRUE)
colnames(data2) <- c("nut.lim", "phage", "num.iso", "total.muts", "total.unique", "mut.syn", "mut.non.syn")
mut2 <- data2 %>%
group_by(nut.lim, phage) %>%
summarise(mut.non.syn = sum(mut.non.syn))
mut2.mat <- matrix(mut2$mut.non.syn, ncol = 2, byrow = F)
colnames(mut2.mat) <- c("N","P")
rownames(mut2.mat) <- c("minus", "plus")
mut2.tab <- as.table(mut2.mat)
mut2.tab.margins <- addmargins(mut2.tab)
mut2.chi <- chisq.test(mut2.tab)
mut2.chi
# p-value = 0.0894: non-synonymous
# p-value = 0.006043: total unique
mut2.fish <- fisher.test(mut2.tab)
# Posthoc analysis
mut2.z <- as.data.frame(mut2.chi$stdres)
mut2.x2 <- mut2.z$Freq^2
mut2.p <- pchisq(mut2.x2, df = 1, lower.tail = FALSE)
mut2.p.adj <- p.adjust(mut2.p, method = "BH")
colnames(mut2.post.hoc) <- c("phage", "nut.lim", "z", "chi2", "p", "p.adj")
mut2.post.hoc <- data.frame(mut2.z, mut2.x2, mut2.p, mut2.p.adj)
colnames(mut2.post.hoc) <- c("phage", "nut.lim", "z", "chi2", "p", "p.adj")
# Clear and set working directory
rm(list = ls())
setwd("~/GitHub/stoichiogenomics")
require("dplyr")
require("tibble")
data <- read.csv("~/GitHub/stoichiogenomics/breseq/unified/count-diff.csv", header = TRUE)
nut.treat <- c("N", "N", "N", "N", "P", "P", "P", "P")
phage.treat <- c("minus", "plus", "plus", "plus", "minus", "plus", "plus", "plus")
data <- data.frame(nut.treat, phage.treat, data[,c(5, 15, 16)])
colnames(data) <- c("nut.lim", "phage", "s.indel", "mut.syn", "mut.non.syn")
data
data <- read.csv("~/GitHub/stoichiogenomics/breseq/unified/count-diff.csv", header = TRUE)
data
data <- read.csv("~/GitHub/stoichiogenomics/breseq/unified/count-diff.csv", header = TRUE)
nut.treat <- c("N", "N", "N", "N", "P", "P", "P", "P")
phage.treat <- c("minus", "plus", "plus", "plus", "minus", "plus", "plus", "plus")
data <- data.frame(nut.treat, phage.treat, data[,c(3:5, 15, 16)])
data
colnames(data) <- c("nut.lim", "phage", "total" "base.sub", "s.indel", "mut.syn", "mut.non.syn")
colnames(data) <- c("nut.lim", "phage", "total", "base.sub", "s.indel", "mut.syn", "mut.non.syn")
data
mut <- data %>%
group_by(nut.lim, phage) %>%
summarise(mut = sum(base.sub))
mut.mat <- matrix(mut$bas.sub, ncol = 2, byrow = F)
mut.mat <- matrix(mut$base.sub, ncol = 2, byrow = F)
mut
mut.mat <- matrix(mut, ncol = 2, byrow = F)
data <- read.csv("~/GitHub/stoichiogenomics/breseq/unified/count-diff.csv", header = TRUE)
nut.treat <- c("N", "N", "N", "N", "P", "P", "P", "P")
phage.treat <- c("minus", "plus", "plus", "plus", "minus", "plus", "plus", "plus")
data <- data.frame(nut.treat, phage.treat, data[,c(3:5, 15, 16)])
colnames(data) <- c("nut.lim", "phage", "total", "base.sub", "s.indel", "mut.syn", "mut.non.syn")
data
mut <- data %>%
group_by(nut.lim, phage) %>%
summarise(mut = sum(base.sub))
mut
mut.mat <- matrix(mut, ncol = 2, byrow = F)
mut.mat <- matrix(mut$base.sub, ncol = 2, byrow = F)
mut <- data %>%
group_by(nut.lim, phage) %>%
summarise(mut = sum(base.sub))
mut.mat <- matrix(mut$base.sub, ncol = 2, byrow = F)
mut$base.sub
rm(list = ls())
setwd("~/GitHub/stoichiogenomics")
require("dplyr")
require("tibble")
data2 <- read.csv("~/GitHub/stoichiogenomics/breseq/unified/larsen.csv", sep = ",", header = TRUE)
colnames(data2) <- c("nut.lim", "phage", "num.iso", "total.muts", "total.unique", "mut.syn", "mut.non.syn")
mut2 <- data2 %>%
group_by(nut.lim, phage) %>%
summarise(mut.non.syn = sum(mut.non.syn))
mut2
mut2.mat <- matrix(mut2$mut.non.syn, ncol = 2, byrow = F)
mut2.mat
mut2 <- data2 %>%
group_by(nut.lim, phage) %>%
summarise(mut = sum(mut.non.syn))
mut2.mat <- matrix(mut2$mut.non.syn, ncol = 2, byrow = F)
mut2 <- data2 %>%
group_by(nut.lim, phage) %>%
summarise(mut.non.syn = sum(mut.non.syn))
mut2.mat <- matrix(mut2$mut.non.syn, ncol = 2, byrow = F)
mut <- data %>%
group_by(nut.lim, phage) %>%
summarise(base.sub = sum(base.sub))
mut <- data %>%
group_by(nut.lim, phage) %>%
summarise(mut = sum(base.sub))
rm(list = ls())
setwd("~/GitHub/stoichiogenomics")
require("dplyr")
require("tibble")
data <- read.csv("~/GitHub/stoichiogenomics/breseq/unified/count-diff.csv", header = TRUE)
nut.treat <- c("N", "N", "N", "N", "P", "P", "P", "P")
phage.treat <- c("minus", "plus", "plus", "plus", "minus", "plus", "plus", "plus")
data <- data.frame(nut.treat, phage.treat, data[,c(3:5, 15, 16)])
colnames(data) <- c("nut.lim", "phage", "total", "base.sub", "s.indel", "mut.syn", "mut.non.syn")
mut <- data %>%
group_by(nut.lim, phage) %>%
summarise(base.sub = sum(base.sub))
mut
mut.mat <- matrix(mut$base.sub, ncol = 2, byrow = F)
mut.mat
colnames(mut.mat) <- c("N","P")
rownames(mut.mat) <- c("minus", "plus")
mut.tab <- as.table(mut.mat)
mut.tab.margins <- addmargins(mut.non.syn.tab)
mut.tab.margins <- addmargins(mut.tab)
mut.chi <- chisq.test(mut.non.syn.tab)
mut.chi <- chisq.test(mut.tab)
mut.chi
mut.z <- as.data.frame(mut.chi$stdres)
mut.x2 <- mut.z$Freq^2
mut.p <- pchisq(mut.x2, df = 1, lower.tail = FALSE)
mut.p.adj <- p.adjust(mut.p, method = "BH")
mut.post.hoc <- data.frame(mut.z, mut.x2, mut.p, mut.p.adj)
colnames(mut.post.hoc) <- c("phage", "nut.lim", "z", "chi2", "p", "p.adj")
mut.post.hoc
