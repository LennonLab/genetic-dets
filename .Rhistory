# join treatment and muation data
mut.data <- left_join(mut.data, cstat.trt, by="cID")
# mutation data
mut.data <- read_csv(here("data/mutPositions_wPrevalence.csv"))
# data of chemostat treament
cstat.trt <- read_csv(here("data/cID_trt.csv"))
# join treatment and muation data
mut.data <- left_join(mut.data, cstat.trt, by="cID")
# choose filtering threshold of mutation prevalence (0-1)
prevalence.threshold <- 1
mut.data%>%
filter(prevalence < prevalence.threshold) %>%
filter(type == "DEL") %>%
group_by("nut.lim", "phage" ) %>%
summarise(base.sub = n())
# c("nut.lim", "phage", "total", "base.sub", "s.indel", "mut.syn", "mut.non.syn")
mut.data%>%
filter(prevalence < prevalence.threshold) %>%
filter(type == "DEL") %>%
group_by(nut.lim, phage , cID) %>%
summarise(base.sub = n())
mut.data%>%
filter(prevalence < prevalence.threshold) %>%
filter(type == "SUB") %>%
group_by(nut.lim, phage , cID) %>%
summarise(base.sub = n())
total <- mut.data%>%
filter(prevalence < prevalence.threshold) %>%
# filter(type == "SUB") %>%
group_by(nut.lim, phage , cID) %>%
summarise(base.sub = n())
View(total)
total <- mut.data%>%
filter(prevalence < prevalence.threshold) %>%
# filter(type == "SUB") %>%
group_by(nut.lim, phage , cID) %>%
summarise(total = n())
unique(mut.data$type)
indel <- mut.data%>%
filter(prevalence < prevalence.threshold) %>%
filter(type == "INS" | type == "DEL") %>%
group_by(nut.lim, phage , cID) %>%
summarise(base.sub = n())
View(indel)
data <- mut.data%>%
filter(prevalence < prevalence.threshold) %>%
group_by(nut.lim, phage , cID) %>%
summarise(total = n())
data <- mut.data%>%
filter(prevalence < prevalence.threshold) %>%
filter(type == "SUB") %>%
group_by(nut.lim, phage , cID) %>%
summarise(base.sub = n())%>%
left_join(data, .)
data <- mut.data%>%
filter(prevalence < prevalence.threshold) %>%
filter(type == "INS" | type == "DEL") %>%
group_by(nut.lim, phage , cID) %>%
summarise(base.sub = n())%>%
left_join(data, .)
data <- mut.data%>%
filter(prevalence < prevalence.threshold) %>%
group_by(nut.lim, phage , cID) %>%
summarise(total = n())
data <- mut.data%>%
filter(prevalence < prevalence.threshold) %>%
filter(type == "SUB") %>%
group_by(nut.lim, phage , cID) %>%
summarise(base.sub = n())%>%
left_join(data, .)
data <- mut.data%>%
filter(prevalence < prevalence.threshold) %>%
filter(type == "INS" | type == "DEL") %>%
group_by(nut.lim, phage , cID) %>%
summarise(s.indel = n())%>%
left_join(data, .)
View(data)
# Clear and set working directory
rm(list = ls())
library(here)
require("dplyr")
require("tibble")
require("tidyr")
require("readr")
# Clear and set working directory
rm(list = ls())
library(tidyverse)
library(here)
library(cowplot)
setwd(here())
setwd("~/GitHub/stoichiogenomics/")
#d.compare <- read_tsv(here("breseq/compare-all.tsv"))
d.compare <- read.table(file = "breseq/compare-all.tsv", sep = '\t', header = TRUE)
# select important columns
d <- d.compare %>%
select(position, type, mutation_category, strain = title)
# convert to wide format
d.wide <- d %>%
#presence column
mutate(presence=1)%>%
pivot_wider(names_from = strain, values_from = presence, values_fill = 0)
head(d.wide[,1:8])
# visualize mutations
d %>%
ggplot(aes(y = fct_rev(strain), x = position))+
geom_jitter(aes(fill = type), shape = 21, height = 0.2, width = 5000)+
theme_bw()
#visualize 500k
p1 <-
d %>%
filter(position>5.3e5)%>%
filter(position<5.4e5)%>%
ggplot(aes(y=fct_rev(strain), x=position))+
geom_jitter(aes(fill=type), shape=21, height = 0.3,width = 50)+
theme_bw()+
theme(legend.position = "bottom")
#visualize 2M
p2 <-
d %>%
filter(position>2.01e6)%>%
filter(position<2.03e6)%>%
ggplot(aes(y=fct_rev(strain), x=position))+
geom_jitter(aes(fill=type), shape=21, height = 0.3,width = 50)+
theme_bw()+
theme(legend.position = "bottom")
plot_grid(p1,p2)
d.gene <- d.compare%>%
select(gene_name, strain=title)%>%
group_by(gene_name, strain)%>%
summarise(n=n(), .groups="drop")%>%
arrange(desc(n))
# visualize
d.gene %>%
# mutate(gene_product = str_trunc(gene_product,30)%>%fct_infreq()%>%fct_rev())%>%
mutate(gene_name = fct_infreq(gene_name)%>%fct_rev())%>%
ggplot(aes(x = strain, y = gene_name))+
geom_tile(aes(fill = n))+
theme_bw()+
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5))
# numer of sequenced strains
n.strains <- d$strain %>% unique() %>% length()
sum.gene <- d.gene %>%
group_by(gene_name)%>%
summarise(n=n(), avg.mut.n= n/n.strains, .groups="drop")
# list of plots
l.plot <- list()
# try several cutoffs
n.max <- c(1, 0.8, 0.6, 0.4, 0.2)
for (i in n.max){
#filter based on cutoff
filt.out <- sum.gene %>%
filter(avg.mut.n>i) %>%
pull(gene_name)%>%
unique()
l.plot[[as.character(i)]] <- d.compare %>%
filter(! gene_name %in% filt.out) %>%
select(position, type, mutation_category, strain=title) %>%
#plot
ggplot(aes(y=fct_rev(strain), x=position))+
geom_jitter(aes(fill = type), shape = 21, height = 0.2, width = 5000)+
theme_bw()+
expand_limits(x = c(0, max(d.compare$position)))
}
plot_grid(plotlist = l.plot, nrow = 5, labels = n.max, label_colour = "red", label_x = 0.1)
d.write <- left_join(d.compare, sum.gene)
View(d.write)
d.write <- left_join(d.compare, sum.gene) %>%
select(strain_ID = title, gene=locus_tag, gene_name, position, mutation_category,
mutation_type=type, prevalence = avg.mut.n) %>%
# add metadata
mutate(Time = str_extract(strain_ID, "^..") %>% parse_integer()) %>%
mutate(cID=str_extract(strain_ID, "N.|P.")) %>%
mutate(clone=str_extract(strain_ID, "S."))
write_csv(d.write, here("data/mutPositions_wPrevalence.csv"))
View(d.write)
# Chunk 1: setup
# Clear and set working directory
rm(list = ls())
library(here)
require("dplyr")
require("tibble")
require("tidyr")
require("readr")
# Chunk 3
# mutation data
mut.data <- read_csv(here("data/mutPositions_wPrevalence.csv"))
# data of chemostat treament
cstat.trt <- read_csv(here("data/cID_trt.csv"))
# join treatment and muation data
mut.data <- left_join(mut.data, cstat.trt, by="cID")
View(mut.data)
mut.data$mutation_category%>%unique()
data <- mut.data%>%
filter(prevalence < prevalence.threshold) %>%
group_by(nut.lim, phage , cID, muation_category) %>%
summarise(n = n())
# choose filtering threshold of mutation prevalence (0-1)
prevalence.threshold <- 1
data <- mut.data%>%
filter(prevalence < prevalence.threshold) %>%
group_by(nut.lim, phage , cID, muation_category) %>%
summarise(n = n())
data <- mut.data%>%
filter(prevalence < prevalence.threshold) %>%
group_by(nut.lim, phage , cID, mutation_category) %>%
summarise(n = n())
View(data)
data <- mut.data%>%
filter(prevalence < prevalence.threshold) %>%
group_by(nut.lim, phage , cID, mutation_category) %>%
summarise(n = n())%>%
pivot_wider(values_from = n ,names_from = mutation_category)
View(cstat.trt)
View(data)
data <- mut.data%>%
filter(prevalence < prevalence.threshold) %>%
group_by(nut.lim, phage , cID, mutation_category) %>%
summarise(n = n())%>%
pivot_wider(values_from = n ,names_from = mutation_category, values_fill = 0)
View(data)
colnames(data)
data1 <- read.csv(here("breseq/unified/count-diff.csv"), header = TRUE)
nut.treat <- c("N", "N", "N", "N", "P", "P", "P", "P")
phage.treat <- c("minus", "plus", "plus", "plus", "minus", "plus", "plus", "plus")
data <- data.frame(nut.treat, phage.treat, data[,c(3:5, 15, 16)])
colnames(data) <- c("nut.lim", "phage", "total", "base.sub", "s.indel", "mut.syn", "mut.non.syn")
data <- data.frame(nut.treat, phage.treat, data[,c(3:5, 15, 16)])
# Chunk 1: setup
# Clear and set working directory
rm(list = ls())
library(here)
require("dplyr")
require("tibble")
require("tidyr")
require("readr")
# Chunk 3
# mutation data
mut.data <- read_csv(here("data/mutPositions_wPrevalence.csv"))
# data of chemostat treament
cstat.trt <- read_csv(here("data/cID_trt.csv"))
# join treatment and muation data
mut.data <- left_join(mut.data, cstat.trt, by="cID")
# Chunk 4
# choose filtering threshold of mutation prevalence (0-1)
prevalence.threshold <- 1
data2 <- mut.data%>%
filter(prevalence < prevalence.threshold) %>%
group_by(nut.lim, phage , cID, mutation_category) %>%
summarise(n = n())%>%
pivot_wider(values_from = n ,names_from = mutation_category, values_fill = 0)
# columns in original data df
# c("nut.lim", "phage", "total", "base.sub", "s.indel", "mut.syn", "mut.non.syn")
# columns now in data df
# c("nut.lim", "phage", "cID", "small_indel", "snp_noncoding", "snp_nonsynonymous", "snp_synonymous", "snp_intergenic", "snp_nonsense" )
data <- read.csv(here("breseq/unified/count-diff.csv"), header = TRUE)
nut.treat <- c("N", "N", "N", "N", "P", "P", "P", "P")
phage.treat <- c("minus", "plus", "plus", "plus", "minus", "plus", "plus", "plus")
data <- data.frame(nut.treat, phage.treat, data[,c(3:5, 15, 16)])
colnames(data) <- c("nut.lim", "phage", "total", "base.sub", "s.indel", "mut.syn", "mut.non.syn")
mut <- data %>%
group_by(nut.lim, phage) %>%
summarise(base.sub = sum(base.sub))
View(mut)
data3 <- mut.data%>%
filter(prevalence < prevalence.threshold) %>%
group_by(nut.lim, phage , cID, mutation_type) %>%
summarise(n = n())%>%
pivot_wider(values_from = n ,names_from = mutation_type, values_fill = 0)
View(data3)
View(data)
mut <- data %>%
group_by(nut.lim, phage) %>%
summarise(base.sub = sum(base.sub))
mut.mat <- matrix(mut$base.sub, ncol = 2, byrow = F)
colnames(mut.mat) <- c("N","P")
rownames(mut.mat) <- c("minus", "plus")
mut.tab <- as.table(mut.mat)
mut.tab.margins <- addmargins(mut.tab)
mut.chi <- chisq.test(mut.tab)
mut.chi
mut <- data3 %>%
group_by(nut.lim, phage) %>%
summarise(base.sub = sum(SUB))
View(mut)
mut.mat <- matrix(mut$base.sub, ncol = 2, byrow = F)
View(mut.mat)
View(mut)
View(mut)
mut.mat <- pivot_wider(mut, names_from = nut.lim, values_from = base.sub)
View(mut.mat)
# colnames(mut.mat) <- c("N","P")
# rownames(mut.mat) <- c("minus", "plus")
mut.tab <- as.table(mut.mat)
# colnames(mut.mat) <- c("N","P")
# rownames(mut.mat) <- c("minus", "plus")
mut.tab <- as.table(data.frame(mut.mat))
data.frame(mut.mat)
mut%>%class()
mut <- data3 %>%
group_by(nut.lim, phage) %>%
summarise(base.sub = sum(SUB))
mut <- data3 %>%
group_by(nut.lim, phage) %>%
summarise(base.sub = sum(SUB))%>%
ungroup()
mut%>%class()
class(mut.mat)
mut.mat <- pivot_wider(mut, names_from = nut.lim, values_from = base.sub)%>%
as.matrix()
View(mut.mat)
# colnames(mut.mat) <- c("N","P")
# rownames(mut.mat) <- c("minus", "plus")
mut.tab <- as.table(mut.mat)
mut.tab
# colnames(mut.mat) <- c("N","P")
rownames(mut.mat) <- c("minus", "plus")
mut.tab <- as.table(mut.mat)
mut.tab
mut.mat <- pivot_wider(mut, names_from = nut.lim, values_from = base.sub)%>%
select(-phage)%>%
as.matrix()
# colnames(mut.mat) <- c("N","P")
rownames(mut.mat) <- c("minus", "plus")
mut.tab <- as.table(mut.mat)
mut.tab
mut.tab.margins <- addmargins(mut.tab)
mut.chi <- chisq.test(mut.tab)
# Posthoc analysis
mut.z <- as.data.frame(mut.chi$stdres)
mut.chi
# Posthoc analysis
mut.z <- as.data.frame(mut.chi$stdres)
mut.x2 <- mut.z$Freq^2
mut.p <- pchisq(mut.x2, df = 1, lower.tail = FALSE)
mut.p.adj <- p.adjust(mut.p, method = "BH")
mut.post.hoc <- data.frame(mut.z, mut.x2, mut.p, mut.p.adj)
colnames(mut.post.hoc) <- c("phage", "nut.lim", "z", "chi2", "p", "p.adj")
mut.post.hoc
# Chunk 1: setup
# Clear and set working directory
rm(list = ls())
library(here)
require("dplyr")
require("tibble")
require("tidyr")
require("readr")
# Chunk 2
data <- read.csv(here("breseq/unified/count-diff.csv"), header = TRUE)
nut.treat <- c("N", "N", "N", "N", "P", "P", "P", "P")
phage.treat <- c("minus", "plus", "plus", "plus", "minus", "plus", "plus", "plus")
data <- data.frame(nut.treat, phage.treat, data[,c(3:5, 15, 16)])
colnames(data) <- c("nut.lim", "phage", "total", "base.sub", "s.indel", "mut.syn", "mut.non.syn")
# Chunk 3
mut <- data %>%
group_by(nut.lim, phage) %>%
summarise(base.sub = sum(base.sub))
mut.mat <- matrix(mut$base.sub, ncol = 2, byrow = F)
colnames(mut.mat) <- c("N","P")
rownames(mut.mat) <- c("minus", "plus")
mut.tab <- as.table(mut.mat)
mut.tab.margins <- addmargins(mut.tab)
mut.chi <- chisq.test(mut.tab)
# p-value = 0.33: non-synonymous (recheck)
# p-value = 2.993e-09: total unique
# Posthoc analysis
mut.z <- as.data.frame(mut.chi$stdres)
mut.x2 <- mut.z$Freq^2
mut.p <- pchisq(mut.x2, df = 1, lower.tail = FALSE)
mut.p.adj <- p.adjust(mut.p, method = "BH")
mut.post.hoc <- data.frame(mut.z, mut.x2, mut.p, mut.p.adj)
colnames(mut.post.hoc) <- c("phage", "nut.lim", "z", "chi2", "p", "p.adj")
# Non-synonymous
#  phage nut.lim         z     chi2         p     p.adj
#1 minus       N -1.224352 1.499038 0.2208194 0.2208194
#2  plus       N  1.224352 1.499038 0.2208194 0.2208194
#3 minus       P  1.224352 1.499038 0.2208194 0.2208194
#4  plus       P -1.224352 1.499038 0.2208194 0.2208194
# Base substitutions
#1 minus       N -6.015039 36.1807 1.79843e-09 1.79843e-09
#2  plus       N  6.015039 36.1807 1.79843e-09 1.79843e-09
#3 minus       P  6.015039 36.1807 1.79843e-09 1.79843e-09
#4  plus       P -6.015039 36.1807 1.79843e-09 1.79843e-09
# Chunk 4
# mutation data
mut.data <- read_csv(here("data/mutPositions_wPrevalence.csv"))
# data of chemostat treament
cstat.trt <- read_csv(here("data/cID_trt.csv"))
# join treatment and muation data
mut.data <- left_join(mut.data, cstat.trt, by="cID")
# Chunk 5
# choose filtering threshold of mutation prevalence (0-1)
prevalence.threshold <- 1
data2 <- mut.data%>%
filter(prevalence < prevalence.threshold) %>%
group_by(nut.lim, phage , cID, mutation_category) %>%
summarise(n = n())%>%
pivot_wider(values_from = n ,names_from = mutation_category, values_fill = 0)
data3 <- mut.data%>%
filter(prevalence < prevalence.threshold) %>%
group_by(nut.lim, phage , cID, mutation_type) %>%
summarise(n = n())%>%
pivot_wider(values_from = n ,names_from = mutation_type, values_fill = 0)
# columns in original data df
# c("nut.lim", "phage", "total", "base.sub", "s.indel", "mut.syn", "mut.non.syn")
# columns now in data2 df
# c("nut.lim", "phage", "cID", "small_indel", "snp_noncoding", "snp_nonsynonymous", "snp_synonymous", "snp_intergenic", "snp_nonsense" )
# Chunk 6
mut <- data3 %>%
group_by(nut.lim, phage) %>%
summarise(base.sub = sum(SUB))
mut.mat <- pivot_wider(mut, names_from = nut.lim, values_from = base.sub)%>%
select(-phage)%>%
as.matrix()
# colnames(mut.mat) <- c("N","P")
rownames(mut.mat) <- c("minus", "plus")
mut.tab <- as.table(mut.mat)
mut.tab.margins <- addmargins(mut.tab)
mut.chi <- chisq.test(mut.tab)
# Posthoc analysis
mut.z <- as.data.frame(mut.chi$stdres)
mut.x2 <- mut.z$Freq^2
mut.p <- pchisq(mut.x2, df = 1, lower.tail = FALSE)
mut.p.adj <- p.adjust(mut.p, method = "BH")
mut.post.hoc <- data.frame(mut.z, mut.x2, mut.p, mut.p.adj)
colnames(mut.post.hoc) <- c("phage", "nut.lim", "z", "chi2", "p", "p.adj")
# Chunk 1: setup
# Clear and set working directory
rm(list = ls())
library(here)
require("dplyr")
require("tibble")
require("tidyr")
require("readr")
# Chunk 2
data <- read.csv(here("breseq/unified/count-diff.csv"), header = TRUE)
nut.treat <- c("N", "N", "N", "N", "P", "P", "P", "P")
phage.treat <- c("minus", "plus", "plus", "plus", "minus", "plus", "plus", "plus")
data <- data.frame(nut.treat, phage.treat, data[,c(3:5, 15, 16)])
colnames(data) <- c("nut.lim", "phage", "total", "base.sub", "s.indel", "mut.syn", "mut.non.syn")
# Chunk 3
mut <- data %>%
group_by(nut.lim, phage) %>%
summarise(base.sub = sum(base.sub))
mut.mat <- matrix(mut$base.sub, ncol = 2, byrow = F)
colnames(mut.mat) <- c("N","P")
rownames(mut.mat) <- c("minus", "plus")
mut.tab <- as.table(mut.mat)
mut.tab.margins <- addmargins(mut.tab)
mut.chi <- chisq.test(mut.tab)
# p-value = 0.33: non-synonymous (recheck)
# p-value = 2.993e-09: total unique
# Posthoc analysis
mut.z <- as.data.frame(mut.chi$stdres)
mut.x2 <- mut.z$Freq^2
mut.p <- pchisq(mut.x2, df = 1, lower.tail = FALSE)
mut.p.adj <- p.adjust(mut.p, method = "BH")
mut.post.hoc <- data.frame(mut.z, mut.x2, mut.p, mut.p.adj)
colnames(mut.post.hoc) <- c("phage", "nut.lim", "z", "chi2", "p", "p.adj")
# Non-synonymous
#  phage nut.lim         z     chi2         p     p.adj
#1 minus       N -1.224352 1.499038 0.2208194 0.2208194
#2  plus       N  1.224352 1.499038 0.2208194 0.2208194
#3 minus       P  1.224352 1.499038 0.2208194 0.2208194
#4  plus       P -1.224352 1.499038 0.2208194 0.2208194
# Base substitutions
#1 minus       N -6.015039 36.1807 1.79843e-09 1.79843e-09
#2  plus       N  6.015039 36.1807 1.79843e-09 1.79843e-09
#3 minus       P  6.015039 36.1807 1.79843e-09 1.79843e-09
#4  plus       P -6.015039 36.1807 1.79843e-09 1.79843e-09
# Chunk 4
# mutation data
mut.data <- read_csv(here("data/mutPositions_wPrevalence.csv"))
# data of chemostat treament
cstat.trt <- read_csv(here("data/cID_trt.csv"))
# join treatment and muation data
mut.data <- left_join(mut.data, cstat.trt, by="cID")
# Chunk 5
# choose filtering threshold of mutation prevalence (0-1)
prevalence.threshold <- 1
data2 <- mut.data%>%
filter(prevalence < prevalence.threshold) %>%
group_by(nut.lim, phage , cID, mutation_category) %>%
summarise(n = n())%>%
pivot_wider(values_from = n ,names_from = mutation_category, values_fill = 0)
data3 <- mut.data%>%
filter(prevalence < prevalence.threshold) %>%
group_by(nut.lim, phage , cID, mutation_type) %>%
summarise(n = n())%>%
pivot_wider(values_from = n ,names_from = mutation_type, values_fill = 0)
# columns in original data df
# c("nut.lim", "phage", "total", "base.sub", "s.indel", "mut.syn", "mut.non.syn")
# columns now in data2 df
# c("nut.lim", "phage", "cID", "small_indel", "snp_noncoding", "snp_nonsynonymous", "snp_synonymous", "snp_intergenic", "snp_nonsense" )
# Chunk 6
mut <- data3 %>%
group_by(nut.lim, phage) %>%
summarise(base.sub = sum(SUB))
mut.mat <- pivot_wider(mut, names_from = nut.lim, values_from = base.sub)%>%
select(-phage)%>%
as.matrix()
# colnames(mut.mat) <- c("N","P")
rownames(mut.mat) <- c("minus", "plus")
mut.tab <- as.table(mut.mat)
mut.tab.margins <- addmargins(mut.tab)
mut.chi <- chisq.test(mut.tab)
# Posthoc analysis
mut.z <- as.data.frame(mut.chi$stdres)
mut.x2 <- mut.z$Freq^2
mut.p <- pchisq(mut.x2, df = 1, lower.tail = FALSE)
mut.p.adj <- p.adjust(mut.p, method = "BH")
mut.post.hoc <- data.frame(mut.z, mut.x2, mut.p, mut.p.adj)
colnames(mut.post.hoc) <- c("phage", "nut.lim", "z", "chi2", "p", "p.adj")
