strains%>%
ggplot(aes(x=time))+
geom_bar(aes(fill=trt), color="black", width=0.5)+
facet_wrap(~cID, ncol = 2)+
theme_cowplot()+
scale_y_continuous(breaks = c(0,1,2))+
ggtitle("Strains sequenced in each chemostat")+
xlab("Time (days)")+
ylab("# Strains")
strains%>%
ggplot(aes(x=time))+
geom_bar(aes(fill=trt), color="black", width=0.5)+
facet_wrap(~cID, ncol = 2, dir = "v")+
theme_cowplot()+
scale_y_continuous(breaks = c(0,1,2))+
ggtitle("Strains sequenced in each chemostat")+
xlab("Time (days)")+
ylab("# Strains")
strains%>%
recode_factor("Ph-"="noPHI")%>%
ggplot(aes(x=time))+
geom_bar(aes(fill=trt), color="black", width=0.5)+
facet_wrap(~cID, ncol = 2, dir = "v")+
theme_cowplot()+
scale_y_continuous(breaks = c(0,1,2))+
ggtitle("Strains sequenced in each chemostat")+
xlab("Time (days)")+
ylab("# Strains")
strains%>%
recode_factor(trt,"Ph-"="noPHI")%>%
ggplot(aes(x=time))+
geom_bar(aes(fill=trt), color="black", width=0.5)+
facet_wrap(~cID, ncol = 2, dir = "v")+
theme_cowplot()+
scale_y_continuous(breaks = c(0,1,2))+
ggtitle("Strains sequenced in each chemostat")+
xlab("Time (days)")+
ylab("# Strains")
strains%>%
recode(trt,"Ph-"="noPHI")%>%
ggplot(aes(x=time))+
geom_bar(aes(fill=trt), color="black", width=0.5)+
facet_wrap(~cID, ncol = 2, dir = "v")+
theme_cowplot()+
scale_y_continuous(breaks = c(0,1,2))+
ggtitle("Strains sequenced in each chemostat")+
xlab("Time (days)")+
ylab("# Strains")
strains%>%
ggplot(aes(x=time))+
geom_bar(aes(fill=trt), color="black", width=0.5)+
facet_wrap(~cID, ncol = 2, dir = "v")+
theme_cowplot()+
scale_y_continuous(breaks = c(0,1,2))+
ggtitle("Strains sequenced in each chemostat")+
xlab("Time (days)")+
ylab("# Strains")
strains%>%
ggplot(aes(x=time))+
geom_bar(aes(fill=trt), color="black", width=0.5)+
facet_wrap(~cID, ncol = 2, dir = "v")+
theme_cowplot()+
scale_y_continuous(breaks = c(0,1,2))+
scale_x_continuous(breaks=seq0,21,7)+
ggtitle("Strains sequenced in each chemostat")+
xlab("Time (days)")+
ylab("# Strains")
scale_x_continuous(breaks=seq(0,21,7)+
theme_cowplot()+
strains%>%
ggplot(aes(x=time))+
geom_bar(aes(fill=trt), color="black", width=0.5)+
facet_wrap(~cID, ncol = 2, dir = "v")+
theme_cowplot()+
scale_y_continuous(breaks = c(0,1,2))+
scale_x_continuous(breaks=seq(0,21,7))+
ggtitle("Strains sequenced in each chemostat")+
xlab("Time (days)")+
ylab("# Strains")
#To normalize mutations I want number of strains
n.strains <-
strains%>%
select(trt,lim,cID)%>%
filter(!duplicated(interaction(trt,lim,cID)))%>%
arrange(cID)%>%
group_by(trt, lim)%>%
summarise(n=n(), cIDs=paste(cID, collapse=" "))%>%
print()
chemostatXg <-
#transpose the table
mXg %>%
select(-description)%>%
pivot_longer( cols = c(2:ncol(.)),names_to = "strain_ID", values_to = "mutations")%>%
pivot_wider(id_cols = strain_ID, names_from = "gene", values_from = "mutations")%>%
# add the meta data
left_join(select(strains,trt, lim,cID, strain_ID), . )%>%
#summarize treatments
group_by(trt, lim, cID)%>%
summarize_if(is_double, sum, na.rm = TRUE)%>%
# transpose back
mutate(meta=paste0(lim,".",cID,".",trt))%>%
ungroup()%>%
select(-trt, -lim, -cID)%>%
pivot_longer( cols = c(1:(ncol(.)-1)),names_to = "gene", values_to = "mutations")%>%
pivot_wider(id_cols = gene, names_from = "meta", values_from = "mutations")#%>%
View(chemostatXg)
# in a different var I will transform data to presnce absence
chemostatXg.pa <-
chemostatXg %>%
mutate_at(vars(-gene), ~ replace(., . > 0 | is.na(.), 1))
chemostatXg.pa%>%
# transpose
pivot_longer( cols = c(2:ncol(.)),names_to = "strain_ID", values_to = "mutations")%>%
mutate(lim=str_split(strain_ID,pattern = "\\.", simplify = T)[,1],
cID=str_split(strain_ID,pattern = "\\.", simplify = T)[,2],
trt=str_split(strain_ID,pattern = "\\.", simplify = T)[,3])%>%
select(-strain_ID)%>%
#summarize treatments
group_by(gene,trt ,lim)%>%
summarize(n.mut=sum(mutations))%>%
ungroup()%>%
mutate(n.mut=as.character(n.mut))%>%
ggplot(aes(x=cID, y=gene,fill=n.mut))+
geom_tile(colour="white",size=0.25)+
scale_fill_viridis(discrete = T, direction = -1, option = "magma")+
facet_grid(.~lim)+
theme_cowplot()
chemostatXg.pa%>%
# transpose
pivot_longer( cols = c(2:ncol(.)),names_to = "strain_ID", values_to = "mutations")%>%
mutate(lim=str_split(strain_ID,pattern = "\\.", simplify = T)[,1],
cID=str_split(strain_ID,pattern = "\\.", simplify = T)[,2],
trt=str_split(strain_ID,pattern = "\\.", simplify = T)[,3])%>%
select(-strain_ID)%>%
#summarize treatments
group_by(gene,trt ,lim, cID)%>%
summarize(n.mut=sum(mutations))%>%
ungroup()%>%
mutate(n.mut=as.character(n.mut))%>%
ggplot(aes(x=cID, y=gene,fill=n.mut))+
geom_tile(colour="white",size=0.25)+
scale_fill_viridis(discrete = T, direction = -1, option = "magma")+
facet_grid(.~lim)+
theme_cowplot()
chemostatXg.pa%>%
# transpose
pivot_longer( cols = c(2:ncol(.)),names_to = "strain_ID", values_to = "mutations")%>%
mutate(lim=str_split(strain_ID,pattern = "\\.", simplify = T)[,1],
cID=str_split(strain_ID,pattern = "\\.", simplify = T)[,2],
trt=str_split(strain_ID,pattern = "\\.", simplify = T)[,3])%>%
select(-strain_ID)%>%
#summarize treatments
group_by(gene,trt ,lim, cID)%>%
summarize(n.mut=sum(mutations))%>%
ungroup()%>%
mutate(n.mut=as.character(n.mut))%>%
ggplot(aes(x=trt, y=gene,fill=n.mut))+
geom_tile(colour="white",size=0.25)+
scale_fill_viridis(discrete = T, direction = -1, option = "magma")+
facet_grid(.~cID)+
theme_cowplot()
chemostatXg.pa%>%
# transpose
pivot_longer( cols = c(2:ncol(.)),names_to = "strain_ID", values_to = "mutations")%>%
mutate(lim=str_split(strain_ID,pattern = "\\.", simplify = T)[,1],
cID=str_split(strain_ID,pattern = "\\.", simplify = T)[,2],
trt=str_split(strain_ID,pattern = "\\.", simplify = T)[,3])%>%
select(-strain_ID)%>%
#summarize treatments
group_by(gene,trt ,lim, cID)%>%
summarize(n.mut=sum(mutations))%>%
ungroup()%>%
mutate(n.mut=as.character(n.mut))%>%
ggplot(aes(x=trt, y=gene,fill=n.mut))+
geom_tile(colour="white",size=0.25)+
scale_fill_viridis(discrete = T, direction = -1, option = "magma")+
facet_grid(.~cID)+
theme_cowplot()
rm(list=ls())
library(tidyverse, quietly = TRUE)
library(cowplot, quietly = TRUE)
library(viridis)
# table of strains and their source (time, treatment)
strains <- read_csv("../data/strains.csv")
# remove ansector
strains <- filter(strains,strain_ID!="WH7803")
strains
# Import data file
breseq <- read_csv("breseq_allcompare.csv")
# correct column names
colnames (breseq)<- gsub(".g","",colnames (breseq))
# # crop out the annotation data
# breseq.annot  <-
#   breseq%>%
#     select(position,mutation,annotation,gene,description)
#summarize mutations by gene
mXg <-
breseq%>%
select(-position,-mutation,-annotation)%>%
group_by(gene, description)%>%
summarize_if(is.numeric, sum, na.rm = TRUE)
mXg$gene <-  str_replace_all(mXg$gene, "[^[:alnum:],_,/]", "")
# write_csv(mXg, "mxg.csv")
knitr::kable(mXg)
# test for compatability between strain and mutation tables
# strain names from mutation data
breseq.strains <-
breseq%>%
select_if(is.numeric)%>%
select(-position)%>%
colnames()
# sum(!(breseq.strains %in% strains$strain_ID)) #0
# sum(!(strains$strain_ID %in% breseq.strains)) #0
# # the lists match!
trtXg <-
#transpose the table
mXg %>%
select(-description)%>%
pivot_longer( cols = c(2:ncol(.)),names_to = "strain_ID", values_to = "mutations")%>%
pivot_wider(id_cols = strain_ID, names_from = "gene", values_from = "mutations")%>%
# add the meta data
left_join(select(strains,trt, lim, strain_ID), . )%>%
#summarize treatments
group_by(trt, lim)%>%
mutate(n.strains=n())%>%
group_by(trt, lim,n.strains)%>%
summarize_if(is_double, sum, na.rm = TRUE)%>%
# transpose back
mutate(meta=paste0(lim,".",trt,".","n", n.strains))%>%
ungroup()%>%
select(-trt, -lim, -n.strains)%>%
pivot_longer( cols = c(1:(ncol(.)-1)),names_to = "gene", values_to = "mutations")%>%
pivot_wider(id_cols = gene, names_from = "meta", values_from = "mutations")
trtXg
#To normalize mutations I want number of strains
n.strains <-
mXg %>%
select(-description)%>%
pivot_longer( cols = c(2:ncol(.)),names_to = "strain_ID", values_to = "mutations")%>%
pivot_wider(id_cols = strain_ID, names_from = "gene", values_from = "mutations")%>%
# add the meta data
left_join(select(strains,trt, lim, strain_ID), . )%>%
#summarize treatments
group_by(trt, lim)%>%
mutate(n=n())%>%
select(trt,lim,n)%>%
group_by(trt, lim,n)%>%
summarise()
#normalize
trtXg%>%
select(-gene)%>%
sweep(., 2,FUN="/",STATS=n.strains$n)%>%
#add gene names back
mutate(gene=trtXg$gene)%>%
#prepare for plotting
pivot_longer(cols = colnames(trtXg)[-1], names_to = "trt", values_to = "norm.mut")%>%
ggplot(aes(x=trt, y=gene,fill=log10(norm.mut)))+
geom_tile(colour="white",size=0.25)+
scale_fill_viridis()->p
# ggsave("heatmap.pdf",p, height = 10)
p
strains%>%
ggplot(aes(x=time))+
geom_bar(aes(fill=trt), color="black", width=0.5)+
facet_wrap(~cID, ncol = 2, dir = "v")+
theme_cowplot()+
scale_y_continuous(breaks = c(0,1,2))+
scale_x_continuous(breaks=seq(0,21,7))+
ggtitle("Strains sequenced in each chemostat")+
xlab("Time (days)")+
ylab("# Strains")
chemostatXg <-
#transpose the table
mXg %>%
select(-description)%>%
pivot_longer( cols = c(2:ncol(.)),names_to = "strain_ID", values_to = "mutations")%>%
pivot_wider(id_cols = strain_ID, names_from = "gene", values_from = "mutations")%>%
# add the meta data
left_join(select(strains,trt, lim,cID, strain_ID), . )%>%
#summarize treatments
group_by(trt, lim, cID)%>%
summarize_if(is_double, sum, na.rm = TRUE)%>%
# transpose back
mutate(meta=paste0(lim,".",cID,".",trt))%>%
ungroup()%>%
select(-trt, -lim, -cID)%>%
pivot_longer( cols = c(1:(ncol(.)-1)),names_to = "gene", values_to = "mutations")%>%
pivot_wider(id_cols = gene, names_from = "meta", values_from = "mutations")#%>%
# print()
# in a different var I will transform data to presnce absence
chemostatXg.pa <-
chemostatXg %>%
mutate_at(vars(-gene), ~ replace(., . > 0 | is.na(.), 1))
# aggregate by chemostat
chemostatXg.pa%>%
# transpose
pivot_longer( cols = c(2:ncol(.)),names_to = "strain_ID", values_to = "mutations")%>%
mutate(lim=str_split(strain_ID,pattern = "\\.", simplify = T)[,1],
cID=str_split(strain_ID,pattern = "\\.", simplify = T)[,2],
trt=str_split(strain_ID,pattern = "\\.", simplify = T)[,3])%>%
select(-strain_ID)%>%
#summarize treatments
group_by(gene,trt ,lim, cID)%>%
summarize(n.mut=sum(mutations))%>%
ungroup()%>%
mutate(n.mut=as.character(n.mut))%>%
ggplot(aes(x=trt, y=gene,fill=n.mut))+
geom_tile(colour="white",size=0.25)+
scale_fill_viridis(discrete = T, direction = -1, option = "magma")+
facet_grid(.~cID)+
theme_cowplot()
```{r,  fig.height=10}
chemostatXg <-
#transpose the table
mXg %>%
select(-description)%>%
pivot_longer( cols = c(2:ncol(.)),names_to = "strain_ID", values_to = "mutations")%>%
pivot_wider(id_cols = strain_ID, names_from = "gene", values_from = "mutations")%>%
# add the meta data
left_join(select(strains,trt, lim,cID, strain_ID), . )%>%
#summarize treatments
group_by(trt, lim, cID)%>%
summarize_if(is_double, sum, na.rm = TRUE)%>%
# transpose back
mutate(meta=paste0(lim,".",cID,".",trt))%>%
ungroup()%>%
select(-trt, -lim, -cID)%>%
pivot_longer( cols = c(1:(ncol(.)-1)),names_to = "gene", values_to = "mutations")%>%
pivot_wider(id_cols = gene, names_from = "meta", values_from = "mutations")#%>%
# print()
# in a different var I will transform data to presnce absence
chemostatXg.pa <-
chemostatXg %>%
mutate_at(vars(-gene), ~ replace(., . > 0 | is.na(.), 1))
# aggregate by chemostat
chemostatXg.pa%>%
# transpose
pivot_longer( cols = c(2:ncol(.)),names_to = "strain_ID", values_to = "mutations")%>%
mutate(lim=str_split(strain_ID,pattern = "\\.", simplify = T)[,1],
cID=str_split(strain_ID,pattern = "\\.", simplify = T)[,2],
trt=str_split(strain_ID,pattern = "\\.", simplify = T)[,3])%>%
select(-strain_ID)%>%
#summarize treatments
group_by(gene,trt ,lim, cID)%>%
summarize(n.mut=sum(mutations))%>%
ungroup()%>%
mutate(n.mut=as.character(n.mut))%>%
ggplot(aes(x=trt, y=gene,fill=n.mut))+
geom_tile(colour="white",size=0.25)+
scale_fill_viridis(discrete = T, direction = -1, option = "magma")+
facet_grid(.~cID)+
theme_cowplot()
chemostatXg <-
#transpose the table
mXg %>%
select(-description)%>%
pivot_longer( cols = c(2:ncol(.)),names_to = "strain_ID", values_to = "mutations")%>%
pivot_wider(id_cols = strain_ID, names_from = "gene", values_from = "mutations")%>%
# add the meta data
left_join(select(strains,trt, lim,cID, strain_ID), . )%>%
#summarize treatments
group_by(trt, lim, cID)%>%
summarize_if(is_double, sum, na.rm = TRUE)%>%
# transpose back
mutate(meta=paste0(lim,".",cID,".",trt))%>%
ungroup()%>%
select(-trt, -lim, -cID)%>%
pivot_longer( cols = c(1:(ncol(.)-1)),names_to = "gene", values_to = "mutations")%>%
pivot_wider(id_cols = gene, names_from = "meta", values_from = "mutations")#%>%
# print()
# in a different var I will transform data to presnce absence
chemostatXg.pa <-
chemostatXg %>%
mutate_at(vars(-gene), ~ replace(., . > 0 | is.na(.), 1))
# aggregate by chemostat
chemostatXg.pa%>%
# transpose
pivot_longer( cols = c(2:ncol(.)),names_to = "strain_ID", values_to = "mutations")%>%
mutate(lim=str_split(strain_ID,pattern = "\\.", simplify = T)[,1],
cID=str_split(strain_ID,pattern = "\\.", simplify = T)[,2],
trt=str_split(strain_ID,pattern = "\\.", simplify = T)[,3])%>%
select(-strain_ID)%>%
#summarize treatments
group_by(gene,trt ,lim, cID)%>%
summarize(n.mut=sum(mutations))%>%
ungroup()%>%
mutate(n.mut=as.character(n.mut))%>%
ggplot(aes(x=trt, y=gene,fill=n.mut))+
geom_tile(colour="white",size=0.25)+
scale_fill_viridis(discrete = T, direction = -1, option = "magma")+
facet_grid(.~cID)+
theme_cowplot()
chemostatXg <-
#transpose the table
mXg %>%
select(-description)%>%
pivot_longer( cols = c(2:ncol(.)),names_to = "strain_ID", values_to = "mutations")%>%
pivot_wider(id_cols = strain_ID, names_from = "gene", values_from = "mutations")%>%
# add the meta data
left_join(select(strains,trt, lim,cID, strain_ID), . )%>%
#summarize treatments
group_by(trt, lim, cID)%>%
summarize_if(is_double, sum, na.rm = TRUE)%>%
# transpose back
mutate(meta=paste0(lim,".",cID,".",trt))%>%
ungroup()%>%
select(-trt, -lim, -cID)%>%
pivot_longer( cols = c(1:(ncol(.)-1)),names_to = "gene", values_to = "mutations")%>%
pivot_wider(id_cols = gene, names_from = "meta", values_from = "mutations")#%>%
# print()
# in a different var I will transform data to presnce absence
chemostatXg.pa <-
chemostatXg %>%
mutate_at(vars(-gene), ~ replace(., . > 0 | is.na(.), 1))
# aggregate by chemostat
chemostatXg.pa%>%
# transpose
pivot_longer( cols = c(2:ncol(.)),names_to = "strain_ID", values_to = "mutations")%>%
mutate(lim=str_split(strain_ID,pattern = "\\.", simplify = T)[,1],
cID=str_split(strain_ID,pattern = "\\.", simplify = T)[,2],
trt=str_split(strain_ID,pattern = "\\.", simplify = T)[,3])%>%
select(-strain_ID)%>%
#summarize treatments
group_by(gene,trt ,lim, cID)%>%
summarize(n.mut=sum(mutations))%>%
ungroup()%>%
mutate(n.mut=as.character(n.mut))%>%
ggplot(aes(x=trt, y=gene,fill=n.mut))+
geom_tile(colour="white",size=0.25)+
scale_fill_viridis(discrete = T, direction = -1, option = "magma")+
facet_grid(.~cID)+
theme_cowplot()
chemostatXg <-
#transpose the table
mXg %>%
select(-description)%>%
pivot_longer( cols = c(2:ncol(.)),names_to = "strain_ID", values_to = "mutations")%>%
pivot_wider(id_cols = strain_ID, names_from = "gene", values_from = "mutations")%>%
# add the meta data
left_join(select(strains,trt, lim,cID, strain_ID), . )%>%
#summarize treatments
group_by(trt, lim, cID)%>%
summarize_if(is_double, sum, na.rm = TRUE)%>%
# transpose back
mutate(meta=paste0(lim,".",cID,".",trt))%>%
ungroup()%>%
select(-trt, -lim, -cID)%>%
pivot_longer( cols = c(1:(ncol(.)-1)),names_to = "gene", values_to = "mutations")%>%
pivot_wider(id_cols = gene, names_from = "meta", values_from = "mutations")#%>%
# print()
# in a different var I will transform data to presnce absence
chemostatXg.pa <-
chemostatXg %>%
mutate_at(vars(-gene), ~ replace(., . > 0 | is.na(.), 1))
# aggregate by chemostat
chemostatXg.pa%>%
# transpose
pivot_longer( cols = c(2:ncol(.)),names_to = "strain_ID", values_to = "mutations")%>%
mutate(lim=str_split(strain_ID,pattern = "\\.", simplify = T)[,1],
cID=str_split(strain_ID,pattern = "\\.", simplify = T)[,2],
trt=str_split(strain_ID,pattern = "\\.", simplify = T)[,3])%>%
select(-strain_ID)%>%
#summarize treatments
group_by(gene,trt ,lim, cID)%>%
summarize(n.mut=sum(mutations))%>%
ungroup()%>%
mutate(n.mut=as.character(n.mut))%>%
ggplot(aes(x=trt, y=gene,fill=n.mut))+
geom_tile(colour="white",size=0.25)+
scale_fill_viridis(discrete = T, direction = -1, option = "magma")+
facet_grid(.~cID)+
theme_cowplot()
chemostatXg <-
#transpose the table
mXg %>%
select(-description)%>%
pivot_longer( cols = c(2:ncol(.)),names_to = "strain_ID", values_to = "mutations")%>%
pivot_wider(id_cols = strain_ID, names_from = "gene", values_from = "mutations")%>%
# add the meta data
left_join(select(strains,trt, lim,cID, strain_ID), . )%>%
#summarize treatments
group_by(trt, lim, cID)%>%
summarize_if(is_double, sum, na.rm = TRUE)%>%
# transpose back
mutate(meta=paste0(lim,".",cID,".",trt))%>%
ungroup()%>%
select(-trt, -lim, -cID)%>%
pivot_longer( cols = c(1:(ncol(.)-1)),names_to = "gene", values_to = "mutations")%>%
pivot_wider(id_cols = gene, names_from = "meta", values_from = "mutations")#%>%
# print()
# in a different var I will transform data to presnce absence
chemostatXg.pa <-
chemostatXg %>%
mutate_at(vars(-gene), ~ replace(., . > 0 | is.na(.), 1))
# aggregate by chemostat
chemostatXg.pa%>%
# transpose
pivot_longer( cols = c(2:ncol(.)),names_to = "strain_ID", values_to = "mutations")%>%
mutate(lim=str_split(strain_ID,pattern = "\\.", simplify = T)[,1],
cID=str_split(strain_ID,pattern = "\\.", simplify = T)[,2],
trt=str_split(strain_ID,pattern = "\\.", simplify = T)[,3])%>%
select(-strain_ID)%>%
#summarize treatments
group_by(gene,trt ,lim, cID)%>%
summarize(n.mut=sum(mutations))%>%
ungroup()%>%
mutate(n.mut=as.character(n.mut))%>%
ggplot(aes(x=trt, y=gene,fill=n.mut))+
geom_tile(colour="white",size=0.25)+
scale_fill_viridis(discrete = T, direction = -1, option = "magma")+
facet_grid(.~cID)+
theme_cowplot()
